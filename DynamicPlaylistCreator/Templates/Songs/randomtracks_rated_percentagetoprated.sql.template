-- PlaylistName:[% playlistname %]
-- PlaylistGroups:[% playlistgroups %]
-- PlaylistCategory:songs
[%- IF basetemplate %]
-- BaseTemplate:[% basetemplate %]
[%- END %]
[%- IF repeat %]
-- PlaylistRepeat: 1
[%- END %]
[%- IF percentage == 'zero' %]
-- PlaylistUseCache: 1
[%- END %]
[%- IF nooftracks && percentage != 'zero' %]
-- PlaylistLimitOption:[% nooftracks %]
[%- END %]
[%- IF virtuallibrary %]
-- PlaylistVirtualLibraryID1:[% virtuallibrary %]
[%- END %]
[%- # ----------- %]
[%- IF customskipfilter %]
-- PlaylistStartAction1:cli:customskip setsecondaryfilter [% customskipfilter %]
-- PlaylistStopAction1:cli:customskip clearsecondaryfilter
[%- END %]
[% # --------------------------------------------------------------------------------------------------------------- %]
[%- IF percentage != 'zero' %]
drop table if exists randomweightedratingslow;
drop table if exists randomweightedratingshigh;
drop table if exists randomweightedratingscombined;
create temporary table randomweightedratingslow as select tracks.id, tracks.primary_artist from tracks
	[%- IF (virtuallibrary and !activevirtuallibrary) or (!virtuallibrary and activevirtuallibrary) %]
	join library_track on library_track.track = tracks.id and library_track.library = [% IF activevirtuallibrary %]'PlaylistCurrentVirtualLibraryForClient'[% ELSE %]'PlaylistVirtualLibraryID1'[% END %]
	[%- END %]
	[%- IF includedgenres %]
	join genre_track on genre_track.track = tracks.id
	join genres on genres.id = genre_track.genre and genres.namesearch in ([% includedgenres %])
	[%- END %]
	left join dynamicplaylist_history on dynamicplaylist_history.id = tracks.id and dynamicplaylist_history.client = 'PlaylistPlayer'
	left join tracks_persistent on tracks_persistent.urlmd5 = tracks.urlmd5
	[%- IF recentlyplayed and useapcvalues %]
	join alternativeplaycount on alternativeplaycount.urlmd5 = tracks.urlmd5
	[%- END %]
	WHERE
		audio = 1
		and dynamicplaylist_history.id is null
		and ifnull(tracks_persistent.rating, 0) > 0 and ifnull(tracks_persistent.rating, 0) < [% minratingfortoprated %]
	[%- IF excludedgenres %]
		and not exists (select * from tracks t2,genre_track,genres
						where
							t2.id = tracks.id and
							genre_track.track = tracks.id and
							genre_track.genre = genres.id and
							genres.namesearch in ([% excludedgenres %]))
	[%- END %]
	[%- IF recentlyplayed %]
		and ifnull([% IF useapcvalues %]alternativeplaycount[% ELSE %]tracks_persistent[% END %].lastPlayed,0) < (strftime('%s', 'now') - [% recentlyplayed %])
	[%- END %]
	group by tracks.id
	order by random()
	limit [% percentage %];
[% # --------------------------------------------------------------------------------------------------------------- %]
create temporary table randomweightedratingshigh as [% END %]select tracks.id, tracks.primary_artist from tracks
	[%- IF (virtuallibrary and !activevirtuallibrary) or (!virtuallibrary and activevirtuallibrary) %]
	join library_track on library_track.track = tracks.id and library_track.library = [% IF activevirtuallibrary %]'PlaylistCurrentVirtualLibraryForClient'[% ELSE %]'PlaylistVirtualLibraryID1'[% END %]
	[%- END %]
	[%- IF includedgenres %]
	join genre_track on genre_track.track = tracks.id and genres.namesearch in ([% includedgenres %])
	join genres on genres.id = genre_track.genre
	[%- END %]
	left join dynamicplaylist_history on dynamicplaylist_history.id = tracks.id and dynamicplaylist_history.client = 'PlaylistPlayer'
	left join tracks_persistent on tracks_persistent.urlmd5 = tracks.urlmd5
	[%- IF recentlyplayed and useapcvalues %]
	join alternativeplaycount on alternativeplaycount.urlmd5 = tracks.urlmd5
	[%- END %]
	WHERE
		tracks.audio = 1
		and dynamicplaylist_history.id is null
		and tracks_persistent.rating >= [% minratingfortoprated %]
	[%- IF excludedgenres %]
		and not exists (select * from tracks t2,genre_track,genres
						where
							t2.id = tracks.id and
							genre_track.track = tracks.id and
							genre_track.genre = genres.id and
							genres.namesearch in ([% excludedgenres %]))
	[%- END %]
	[%- IF recentlyplayed %]
		and ifnull([% IF useapcvalues %]alternativeplaycount[% ELSE %]tracks_persistent[% END %].lastPlayed,0) < (strftime('%s', 'now') - [% recentlyplayed %])
	[%- END %]
	group by tracks.id
[%- IF percentage != 'zero' %]
	order by random()
	limit [% 100 - percentage %];
[% # --------------------------------------------------------------------------------------------------------------- %]
create temporary table randomweightedratingscombined as
	select * from randomweightedratingslow
	union
	select * from randomweightedratingshigh;
select distinct * from randomweightedratingscombined
	order by random()[% IF nooftracks %] limit [% nooftracks %][% END %];
drop table randomweightedratingshigh;
drop table randomweightedratingslow;
drop table randomweightedratingscombined;
[%- END %]