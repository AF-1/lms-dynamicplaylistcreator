-- PlaylistName:[% playlistname %]
-- PlaylistGroups:[% playlistgroups %]
-- PlaylistCategory:artists
[%- IF basetemplate %]
-- BaseTemplate:[% basetemplate %]
[%- END %]
[%- IF sqlscope %]
-- Scope:[% sqlscope %]
[%- END %]
[%- IF nooftracks %]
-- PlaylistLimitOption:[% nooftracks %]
[%- END %]
[%- # --------------------------------------------------------------------------------------------------------------- %]
-- PlaylistParameter1:artist:PLUGIN_DYNAMICPLAYLISTS3_PARAMNAME_SELECTARTIST:
[%- # ----------- %]
[%- IF customskipfilter %]
-- PlaylistStartAction1:cli:customskip setsecondaryfilter [% customskipfilter %]
-- PlaylistStopAction1:cli:customskip clearsecondaryfilter
[%- END %]
[%- # --------------------------------------------------------------------------------------------------------------- %]
drop table if exists similar_tracks;
create temporary table similar_tracks as select distinct tracks.url as url[% IF toprated %],tracks_persistent.rating as rating[% END %] from tracks
	join contributor_track on contributor_track.track = tracks.id and contributor_track.role in (1,5)
	join contributors on contributors.id = contributor_track.contributor
	[%- IF toprated or notrated %]
	left join tracks_persistent on
		tracks.url = tracks_persistent.url
	[%- END %]
	[%- IF notrepeat %]
	left join dynamicplaylist_history on
		tracks.id = dynamicplaylist_history.id and dynamicplaylist_history.client = 'PlaylistPlayer'
	[%- END %]
	left join customscan_contributor_attributes as attr1 on
		attr1.contributor = contributors.id and
		attr1.module = 'cslastfm' and
		attr1.attr = 'similarartist'
		[%- IF similaritypercent %]
		and (attr1.extravalue is null or attr1.extravalue > [% similaritypercent %])
		[%- END %]
	WHERE
		tracks.audio = 1
	[%- IF notrepeat %]
		and dynamicplaylist_history.id is null
	[%- END %]
		and (attr1.id is not null and exists(select id from contributors
							where attr1.value = contributors.name and
							contributors.id = 'PlaylistParameter1'))
	[%- IF notrated %]
		and ifnull(tracks_persistent.rating, 0) = 0
	[%- END %]
[%- IF toprated %]
order by tracks_persistent.rating desc
[%- END %];
[%- # --------------------------------------------------------------------------------------------------------------- %]
insert into similar_tracks (url[%IF toprated %],rating[% END %]) select distinct tracks.url as url[% IF toprated %],tracks_persistent.rating as rating[% END %] from tracks
	join contributor_track on contributor_track.track = tracks.id and contributor_track.role in (1,5)
	join contributors on contributors.id = contributor_track.contributor
	[%- IF toprated or notrated %]
	left join tracks_persistent on
		tracks.url = tracks_persistent.url
	[%- END %]
	[%- IF notrepeat %]
	left join dynamicplaylist_history on
		tracks.id = dynamicplaylist_history.id and dynamicplaylist_history.client = 'PlaylistPlayer'
	[%- END %]
	left join customscan_contributor_attributes as attr2 on
		attr2.value = contributors.name and
		attr2.module = 'cslastfm' and
		attr2.attr = 'similarartist'
		[%- IF similaritypercent %]
		and (attr2.extravalue is null or attr2.extravalue > [% similaritypercent %])
		[%- END %]
	WHERE
		tracks.audio = 1
	[%- IF notrepeat %]
		and dynamicplaylist_history.id is null
	[%- END %]
		and (attr2.id is not null and attr2.contributor = 'PlaylistParameter1')
	[%- IF notrated %]
		and ifnull(tracks_persistent.rating, 0) = 0
	[%- END %]
[%- IF toprated %]
order by tracks_persistent.rating desc
[%- END %];
[%- # --------------------------------------------------------------------------------------------------------------- %]
insert into similar_tracks (url[%IF toprated %],rating[% END %]) select distinct tracks.url as url[% IF toprated %],tracks_persistent.rating as rating[% END %] from tracks
	join contributor_track on contributor_track.track = tracks.id and contributor_track.role in (1,5)
	join contributors on contributors.id = contributor_track.contributor
	[%- IF toprated or notrated %]
	left join tracks_persistent on
		tracks.url = tracks_persistent.url
	[%- END %]
	[%- IF notrepeat %]
	left join dynamicplaylist_history on
		tracks.id = dynamicplaylist_history.id and dynamicplaylist_history.client = 'PlaylistPlayer'
	[%- END %]
	WHERE
		tracks.audio = 1
	[%- IF notrepeat %]
		and dynamicplaylist_history.id is null
	[%- END %]
		and contributors.id = 'PlaylistParameter1'
	[%- IF notrated %]
		and tracks_persistent.rating is null
	[%- END %]
[%- IF toprated %]
order by tracks_persistent.rating desc
[%- END %];
[%- # --------------------------------------------------------------------------------------------------------------- %]
select distinct url from similar_tracks
	order by [% IF toprated %]rating desc, [% END %]random()
	[% IF nooftracks %]limit [% nooftracks %][% END %];
drop table if exists similar_tracks;
