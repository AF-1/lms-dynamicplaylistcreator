-- PlaylistName:[% playlistname %]
-- PlaylistGroups:[% playlistgroups %]
-- PlaylistCategory:albums
[%- IF basetemplate %]
-- BaseTemplate:[% basetemplate %]
[%- END %]
[%- IF repeat %]
-- PlaylistRepeat: 1
[%- END %]
-- PlaylistTrackOrder:ordered
-- PlaylistLimitOption:unlimited
-- PlaylistVirtualLibraryID1:[% selectedvirtuallibrary %]
[%- # --------------------------------------------------------------------------------------------------------------- %]
[%- IF customskipfilter %]
-- PlaylistStartAction1:cli:customskip setsecondaryfilter [% customskipfilter %]
-- PlaylistStopAction1:cli:customskip clearsecondaryfilter
[%- END %]
[% # --------------------------------------------------------------------------------------------------------------- %]
drop table if exists tmp_random_virtual_library_albums;
create temporary table tmp_random_virtual_library_albums as
	[% IF sortorder or toprated %]select subselection.album as album from ([% END %]
	select tracks.album as album[% IF sortorder %], [% IF sortorder == 3 || sortorder == 4 %]sum[% ELSE %]avg[% END %](ifnull([% IF useapcvalues %]alternativeplaycount[% ELSE %]tracks_persistent[% END %].playCount,0)) as procplaycount[% END %][% IF toprated %], [% IF toprated == 2 %]sum[% ELSE %]avg[% END %](ifnull(tracks_persistent.rating,0)) as procrating[% END %] from tracks
		join library_track on library_track.track = tracks.id
		[%- IF minmatch == 1 %]
		and library_track.library = 'PlaylistVirtualLibraryID1'
		[%- END %]
		[%- IF (!useapcvalues and sortorder) or toprated %]
		left join tracks_persistent on tracks_persistent.urlmd5 = tracks.urlmd5
		[%- END %]
		[%- IF useapcvalues %]
		join alternativeplaycount on alternativeplaycount.urlmd5 = tracks.urlmd5
		[%- END %]
		left join dynamicplaylist_history on dynamicplaylist_history.id = tracks.id and dynamicplaylist_history.client = 'PlaylistPlayer'
		WHERE
			tracks.audio = 1
			and dynamicplaylist_history.id is null
		group by tracks.album
		[%- IF minmatch == 2 %]
		having
			exists (
				select 1
				from library_album
				where library_album.album = tracks.album
				and library_album.library = 'PlaylistVirtualLibraryID1'
			)
			and not exists (
				select 1
				from tracks t
				where t.album = tracks.album
				and not exists (
						select 1
						from library_track lt
						where lt.track = t.id
						and lt.library = 'PlaylistVirtualLibraryID1'
				)
			)
		[%- END %]
		order by [% IF sortorder == 1 || sortorder == 3 %]procplaycount desc, [% ELSIF sortorder == 2 || sortorder == 4 %]procplaycount asc, [% END %][% IF toprated %]procrating desc, [% END %]random()
		[%- IF sortorder or toprated %]
		limit 30) as subselection
		[%- END %]
	limit [% IF noofalbums %][% noofalbums %][% ELSE %]1[% END %];
[% # --------------------------------------------------------------------------------------------------------------- %]
select tracks.id, tracks.primary_artist from tracks
	join tmp_random_virtual_library_albums on tmp_random_virtual_library_albums.album = tracks.album
	left join dynamicplaylist_history on dynamicplaylist_history.id = tracks.id and dynamicplaylist_history.client = 'PlaylistPlayer'
	WHERE
		tracks.audio = 1
		and dynamicplaylist_history.id is null
	group by tracks.id
	order by tmp_random_virtual_library_albums.album, tracks.disc, tracks.tracknum;
drop table tmp_random_virtual_library_albums;
